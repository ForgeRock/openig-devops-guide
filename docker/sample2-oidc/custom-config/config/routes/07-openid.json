{
  "heap": [
    {
      "comment": "To reuse issuers, configure them in the parent route",
      "name": "accounts.google.com",
      "type": "Issuer",
      "config": {
        "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration"
      }
    },
    {
      "comment": "To reuse client registrations, configure them in the parent route. Note clientSecret below has been rotated",
      "name": "OidcRelyingParty",
      "type": "ClientRegistration",
      "config": {
        "clientId": "${env['CLIENT_ID']}",
        "clientSecret": "${env['CLIENT_SECRET']}",
        "issuer": "accounts.google.com",
        "redirect_uris": [
          "http://openig.test.com:8080/openid/callback"
        ],
        "scopes": [
          "openid",
          "profile"
        ]
      }
    }
  ],
  "session": "JwtSession",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "type": "OAuth2ClientFilter",
          "config": {
            "clientEndpoint": "/openid",
            "requireHttps": false,
            "requireLogin": true,
            "target": "${attributes.openid}",
            "failureHandler": {
              "type": "StaticResponseHandler",
              "config": {
                "comment": "Trivial failure handler for debugging only",
                "status": 500,
                "reason": "Error",
                "entity": "${attributes.openid}"
              }
            },
            "registrations": "OidcRelyingParty"
          }
        }
      ],
      "handler": {
        "type": "StaticResponseHandler",
        "config": {
          "status": 200,
          "entity": "<html><h1>OpenIG OIDC Test Page</h1><p> Userinfo:</p><p>${attributes.openid.user_info} </p> <h2>hostname: ${env['HOSTNAME']} </h2></html>"
        }
      }
    }
  },
  "condition": "${matches(request.uri.path, '^/openid')}"
}
